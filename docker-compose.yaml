version: "3.8"

services:
  nginx:
    container_name: "nginx"
    restart: "unless-stopped"
    image: "nginx:1.23.4-bullseye"
    volumes:
      # Override the nginx default site with my site
      - "./config/nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro"
      # Write logs to local dir for inspection
      # - ./log/nginx:/var/log/nginx
      # Mount shared static directory to nginx container for serving
      - "dev-static:/var/www/localhost"
    ports:
      - "8080:80"

  db:
    container_name: "mysql"
    restart: "unless-stopped"
    image: "mysql:8.0.33-debian"
    volumes:
      # Mount data directory for mysql locally for persistence
      - "./docker/db:/var/lib/mysql"
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_USER: "django"
      MYSQL_PASSWORD: "djangopw"
      MYSQL_DATABASE: "benmanson"

  smtp:
    container_name: "mailhog"
    restart: "unless-stopped"
    image: "mailhog/mailhog"
    ports:
      - "8025:8025"

  backend:
    container_name: "backend"
    restart: "unless-stopped"
    build:
      context: "."
      dockerfile: "backend/Dockerfile"
    environment:
      - AWS_PROFILE=${AWS_PROFILE}
    volumes:
      # Write logs to local dir for inspection
      # - ./log/gunicorn:/var/log/gunicorn
      # Mount local dir to container app dir to reflect changes instantly
      - "./backend:/app"
      # Mount shared static directory to STATIC_ROOT in django
      - "dev-static:/var/www/localhost/static"
      # Mount .aws directory as a read-only volume
      - "$HOME/.aws/credentials:/root/.aws/credentials:ro"
    depends_on:
      - "nginx"
      - "db"
      - "smtp"

volumes:
  dev-static: